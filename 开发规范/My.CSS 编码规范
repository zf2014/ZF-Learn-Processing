基本规则:
每条规则长度不要超过80个字符.
对于多行规则,要有明显的缩进(4空格/tab)


一.CSS校验
	除了 css hack 和浏览器私有属性， 推荐使用 w3c css validator(http://jigsaw.w3.org/css-validator/) 校验其余的代码.

二.代码规范
	1.一般性命名
		使用小写字母，复合词以 - 分隔; 例如 nav.css , login-nav.css , login-page
	2.id 和类的命名
		1)为 id 和样式类使用有意义或通用的名字，避免由于 css 命名更改引起的不必要的文档或模板改变；
		2)id 和 class 的命名长度应该适中，不要太简略也不要太详细
	3.元素选择器
		1)为了 性能原因 ， 请避免元素选择器和类选择器以及 id 选择器混用
	4.简写属性名字
		1)为了提高可读性，尽可能的使用简写属性
	5. 0和单位
		1)对属性值为 0 的情况省略单位
	6. 0 前缀情况
		1)省略属性值中的 0 前缀;
	7. 16 进制的颜色值表示
		尽可能使用 3 个字符的 16 进制颜色值
	8.前缀
		为了防止冲突，对于应用特定的样式附加应用前缀
	9.hacks
		避免 css hack ， 考虑使用特定浏览器前缀表示
	
	10.命名形式采用BEM:Block--Element_Modifier(约定)
		B-Block : 项目中唯一
		E-Element : Block内唯一
		M-Modifier : Block--Element唯一
	
	
三.格式规范	
	1.属性声明顺序
		1)按照字母顺序声明属性，排序时忽略私有的浏览器前缀，对于特定的浏览器，私有的浏览器前缀应该参与排序
	2.块缩进
		1)块的内容应该被缩进
	3.分号
		1)使用分号结束单个属性的定义
	4.空格
		1)在属性名冒号后加一个空格
	5.空行
		1)多个选择以及声明间以行分隔
		2)多个 css 规则间以空行分隔
	6.引号
		1)尽可能的不用引号，迫不得已时使用单引号
	7.注释
		1)成组的 css 规则间用块状注释和空行分离
	
	8.vendor prefixed
		1)同一类型的规则右对齐
		.class{
			...
			-webkit-border-radius:4px;
	       	   -moz-border-radius:4px;
	                border-radius:4px;
			...
		}
		
	9.类似DOM树结构一样展示CSS规则
		.main-nav{
			...
		}
			.main-nav li{}
			
			
	10.尽量不要使用ID作为selector
	
	
	
	11.避免使用over-qualified selector
	  	1)over-qualified selector: div.nav
	
	12.考虑CSS Selector的目的,命名精确
		bad:
			.header ul{...}
		
		good:
			.nav
			
		better
			.main-nav
	
	13.尽量使用class作为CSS Selector Key.
	
	
参考文档
	http://google-styleguide.googlecode.com/svn/trunk/htmlcssguide.xml
	https://developers.google.com/speed/docs/best-practices/rendering?hl=zh-CN
	https://github.com/zhangF1987/CSS-Guidelines									前端开发手册(规范)
	http://csswizardry.com/2012/07/shoot-to-kill-css-selector-intent/				了解CSS Selector正在目的
	http://csswizardry.com/2011/09/writing-efficient-css-selectors/  				如何写出高效的CSS
	http://bem.info/method/definitions/ 											BEM定义
	
	
	
	
	
	
	
	
	
	